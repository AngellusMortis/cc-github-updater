local a=require(settings.get("ghu.base").."core/apis/ghu")local b=require("am.core")local function c(d)local e=a.s[d].get()if d=="extraRepos"then print(#e.." Extra Repo(s):")for f,g in ipairs(e)do print(f..": "..g)end else print(e)end end;local function h(i)local j=arg[0]or fs.getName(shell.getRunningProgram())local k=" <list|get|help|set|add|remove> [name] [value]"if i=="list"then k=" list"elseif i=="get"then k=" get <name>"elseif i=="help"then k=" help <name>"elseif i=="set"then k=" set <name> <value>"elseif i=="add"then k=" add <name> <value>"elseif i=="remove"then k=" remove <name> <value>"end;print("Usage: "..j..k)end;local function l(i,m,e)if i==nil then h()return end;if i=="list"then for n,o in pairs(a.s)do print(n)end;return end;if m==nil then h(i)return end;if a.s[m]==nil then printError("Unexpected setting name: "..m)return end;if i=="get"then c(m)return elseif i=="help"then print(a.s[m].description)return end;if e==nil then h(i)return end;if i=="set"then if e=="default"then e=b.copy(a.s[m].default)elseif a.s[m].type=="table"then e=b.split(e)elseif a.s[m].type=="boolean"then e=b.strBool(e)end;a.s[m].set(e)c(m)return end;if i=="add"or i=="remove"then if a.s[m].type~="table"then printError("Only supported on table settings")return end;local p=a.s[m].get()if i=="add"then p[#p+1]=e else for f=#p,1,-1 do if p[f]==e then table.remove(p,f)break end end end;a.s[m].set(p)c(m)end end;l(arg[1],arg[2],arg[3])
